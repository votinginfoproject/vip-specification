<?xml version="1.0" encoding="utf-8"?>
<!-- working version of VIP schema based on 5.0 for comments
changed all id types to string
added ocdid to district
reference elements for polling location
-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="5.0.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- Enumeration types. -->
  <xs:simpleType name="BallotMeasureType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ballot-measure" />
      <xs:enumeration value="initiative" />
      <xs:enumeration value="referendum" />
      <xs:enumeration value="retention" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CandidatePostElectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="advanced-to-runoff" />
      <xs:enumeration value="projected-winner" />
      <xs:enumeration value="winner" />
      <xs:enumeration value="withdrawn" />
      <xs:enumeration value="write-in" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CandidatePreElectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="filed" />
      <xs:enumeration value="qualified" />
      <xs:enumeration value="withdrawn" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DistrictType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="city" />
      <xs:enumeration value="congressional" />
      <xs:enumeration value="council" />
      <xs:enumeration value="county" />
      <xs:enumeration value="judicial" />
      <xs:enumeration value="local" />
      <xs:enumeration value="locality" />
      <xs:enumeration value="municipality" />
      <xs:enumeration value="national" />
      <xs:enumeration value="school" />
      <xs:enumeration value="special" />
      <xs:enumeration value="state" />
      <xs:enumeration value="statehouse" />
      <xs:enumeration value="statesenate" />
      <xs:enumeration value="township" />
      <xs:enumeration value="utility" />
      <xs:enumeration value="ward" />
      <xs:enumeration value="water" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IdentifierType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ocd-id" />
      <xs:enumeration value="fips" />
      <xs:enumeration value="national-level" />
      <xs:enumeration value="state-level" />
      <xs:enumeration value="local-level" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OebEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="odd" />
      <xs:enumeration value="even" />
      <xs:enumeration value="both" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OfficeTermType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="full-term" />
      <xs:enumeration value="unexpired-term" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="VoteVariation">
    <!-- While this will part of v5.0 of VIP, long-term this will likely get
     replaced by whatever comes out of the 1622.6 "Voting Methods
     Mathematical Models" Working Group
    -->
    <xs:restriction base="xs:string">
      <xs:enumeration value="1-of-m" />
      <xs:enumeration value="approval" />
      <xs:enumeration value="cumulative" />
      <xs:enumeration value="majority" />
      <xs:enumeration value="n-of-m" />
      <xs:enumeration value="plurality" />
      <xs:enumeration value="proportional" />
      <xs:enumeration value="range" />
      <xs:enumeration value="rcv" />
      <xs:enumeration value="rcv-borda" />
      <xs:enumeration value="super-majority" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="VoterServiceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="absentee-ballots" />
      <xs:enumeration value="overseas-voting" />
      <xs:enumeration value="polling-places" />
      <xs:enumeration value="voter-registration" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

<<<<<<< HEAD
  <!-- Non-enumeration simple types. -->
  <xs:simpleType name="TimeWithZone">
    <xs:restriction base="xs:string">
      <xs:pattern value="(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]|(24:00:00))(Z|[+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))" />
    </xs:restriction>
  </xs:simpleType>
=======
        <xs:element name="Office">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ElectoralDistrictId" type="xs:IDREF" />
              <xs:element name="Name" type="InternationalizedText" />
              <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
              <xs:element name="OfficeHolderPersonId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="IsPartisan" type="xs:boolean" minOccurs="0" />
              <xs:element name="FilingDeadline" type="xs:date" minOccurs="0" />
              <xs:element name="Term" type="Term" minOccurs="0" />
              <xs:element name="ContactInformationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
>>>>>>> Pass 11 of N in migrating the sample feed to VIP 5.0.

  <!-- Complex types. -->
  <xs:complexType name="BallotMeasureContestType">
    <xs:complexContent>
      <xs:extension base="ContestType">
        <xs:sequence>
          <xs:element name="ConStatement" type="InternationalizedText" minOccurs="0" />
          <xs:element name="FullText" type="InternationalizedText" minOccurs="0" />
          <xs:element name="ProStatement" type="InternationalizedText" minOccurs="0" />
          <xs:element name="SummaryText" type="InternationalizedText" minOccurs="0" />
          <xs:element name="Type" type="BallotMeasureType" minOccurs="0" />
          <xs:element name="OtherType" type="xs:string" minOccurs="0" />
          <xs:element name="EffectOfAbstain" type="InternationalizedText" minOccurs="0" />
          <xs:element name="PassageThreshold" type="InternationalizedText" minOccurs="0" />
          <!-- The following elements are not currently in 1622.2 -->
          <xs:element name="InfoUrl" type="xs:anyURI" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Generic string for a ballot measure (referendum) selection -->
  <xs:complexType name="BallotMeasureSelection">
    <xs:complexContent>
      <xs:extension base="BallotSelectionType">
        <xs:sequence>
          <xs:element name="Selection" type="InternationalizedText" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BallotSelectionType">
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="BallotStyle">
    <xs:sequence>
      <xs:element name="OrderedContest" type="OrderedContestType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="PartyId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="ImageUri" type="xs:anyURI" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="Candidate">
    <xs:sequence>
      <xs:element name="PartyId" type="xs:IDREF" minOccurs="0" />
      <xs:element name="PersonId" type="xs:IDREF" minOccurs="0" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
      <xs:element name="BallotName" type="InternationalizedText" />
      <xs:element name="FileDate" type="xs:dateTime" minOccurs="0" />
      <xs:element name="IsIncumbent" type="xs:boolean" minOccurs="0" />
      <xs:element name="IsTopTicket" type="xs:boolean" minOccurs="0" />
      <xs:element name="PostElectionStatus" type="CandidatePostElectionStatus" minOccurs="0" />
      <xs:element name="PreElectionStatus" type="CandidatePreElectionStatus" minOccurs="0" />
      <!-- NOTE: Still trying to get feedback or an example of what this means and how it's used -->
      <xs:element name="SequenceOrder" type="xs:integer" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="CandidateContest">
    <xs:complexContent>
      <xs:extension base="ContestType">
        <xs:sequence>
          <xs:element name="OfficeId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="PrimaryPartyId" type="xs:IDREF" minOccurs="0" />
          <xs:element name="NumberElected" type="xs:integer" minOccurs="0" />
          <xs:element name="VotesAllowed" type="xs:integer" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CandidateSelection">
    <xs:complexContent>
      <xs:extension base="BallotSelectionType">
        <xs:sequence>
          <xs:element name="CandidateId" type="xs:IDREF" maxOccurs="unbounded" />
          <xs:element name="EndorsementPartyId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="isWriteIn" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContactInformation">
    <xs:sequence>
      <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <!-- Note: The "Hours" element is being deprecated and will be removed
           in future versions of VIP.
        -->
      <xs:element name="Hours" type="InternationalizedText" minOccurs="0" />
      <xs:element name="HoursOpenId" type="xs:IDREF" minOccurs="0" />
      <!-- This can be a person or place name. -->
      <xs:element name="Name" type="xs:string" minOccurs="0" />
      <xs:element name="Phone" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Fax" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Uri" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="ContestType">
    <xs:sequence>
      <xs:element name="BallotSelectionId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
      <xs:element name="ElectoralDistrictId" type="xs:IDREF" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Abbreviation" type="xs:string" minOccurs="0" />
      <xs:element name="BallotTitle" type="InternationalizedText" minOccurs="0" />
      <xs:element name="BallotSubTitle" type="InternationalizedText" minOccurs="0" />
      <xs:element name="HasRotation" type="xs:boolean" minOccurs="0" />
      <xs:element name="VoteVariationType" type="VoteVariation" minOccurs="0" />
      <xs:element name="OtherVoteVariationType" type="xs:string" minOccurs="0" />
      <xs:element name="ElectorateSpecification" type="InternationalizedText" minOccurs="0" />
      <!-- NOTE: Still trying to get feedback or an example of what this means and how it's used -->
      <xs:element name="SequenceOrder" type="xs:integer" minOccurs="0" />
<<<<<<< HEAD
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="DetailAddressType">
    <xs:all>
      <xs:element name="HouseNumber" type="xs:integer" minOccurs="0" />
      <xs:element name="HouseNumberPrefix" type="xs:string" minOccurs="0" />
      <xs:element name="HouseNumberSuffix" type="xs:string" minOccurs="0" />
      <xs:element name="StreetDirection" type="xs:string" minOccurs="0" />
      <xs:element name="StreetName" type="xs:string" />
      <xs:element name="StreetSuffix" type="xs:string" minOccurs="0" />
      <xs:element name="AddressDirection" type="xs:string" minOccurs="0" />
      <xs:element name="Apartment" type="xs:string" minOccurs="0" />
      <xs:element name="City" type="xs:string" />
      <xs:element name="State" type="xs:string" />
      <xs:element name="Zip" type="xs:string" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ElectionAdministration">
    <xs:sequence>
      <xs:element name="ElectionsUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="RegistrationUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="AmIRegisteredUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="AbsenteeUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="WhereDoIVoteUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="WhatIsOnMyBallotUrl" type="xs:anyURI" minOccurs="0" />
      <xs:element name="RulesUrl" type="xs:anyURI" minOccurs="0" />
      <!-- A locality may have more than one department with each handling different services. -->
      <xs:element name="Department" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ContactInformationId" type="xs:IDREF" minOccurs="0" />
            <xs:element name="ElectionOfficialPersonId" type="xs:IDREF" minOccurs="0" />
            <xs:element name="VoterService" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:all>
                  <xs:element name="Type" type="VoterServiceType" minOccurs="0" />
                  <xs:element name="OtherType" type="xs:string" minOccurs="0" />
                  <xs:element name="Description" type="InternationalizedText" minOccurs="0" />
                  <!--
              The contact information below can be used to override or
              add specific fields to the base Departmental contact information if
              the service has different information.  For example, if the voter
              service has its own phone number, the ContactInformation object
              below can be an object containing only a Phone element.
              -->
                  <xs:element name="ContactInformationId" type="xs:IDREF" minOccurs="0" />
                  <!--
              This is for use if a certain person handles the particular service,
              for example a contact person for overseas voting.
              -->
                  <xs:element name="ElectionOfficialPersonId" type="xs:IDREF" minOccurs="0" />
                </xs:all>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="ElectoralDistrict">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Type" type="DistrictType" />
      <xs:element name="OtherType" type="xs:string" minOccurs="0" />
      <xs:element name="Number" type="xs:integer" minOccurs="0" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="ExternalIdentifiers">
    <xs:sequence>
      <xs:element name="ExternalIdentifier">
        <xs:complexType>
          <xs:all>
            <xs:element name="Type" type="IdentifierType" />
            <xs:element name="OtherType" type="xs:string" minOccurs="0" />
            <xs:element name="Value" type="xs:string" minOccurs="0" />
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="HoursOpen">
    <xs:sequence>
      <xs:element name="Schedule" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="StartDate" type="xs:date" minOccurs="0" />
            <xs:element name="EndDate" type="xs:date" minOccurs="0" />
            <xs:element name="Hours" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="StartTime" type="TimeWithZone" maxOccurs="1" />
                  <xs:element name="EndTime" type="TimeWithZone" maxOccurs="1" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="IsOrByAppointment" type="xs:boolean" minOccurs="0" maxOccurs="1" />
            <xs:element name="IsOnlyByAppointment" type="xs:boolean" minOccurs="0" maxOccurs="1" />
            <xs:element name="IsSubjectToChange" type="xs:boolean" minOccurs="0" maxOccurs="1" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <!--
  InternationalizedText: a type representing a word or block of text
  translated into one or more languages.

  For example, an instance of:

    <xs:element name="Office" type="InternationalizedText" />

  could be:

    <Office identifier="office_mayor">
      <Text language="en">Mayor</Text>
      <Text language="es">Alcalde</Text>
      <Text language="zh">市長</Text>
    </Office>

  The optional "identifier" attribute can be used to name the text
  being translated.  For example, if the translations come from a
  comma-delimited flat file, the identifier for the corresponding row
  in the flat file could be stored in this attribute for tracking purposes.
  In the above example, the element could have come from a flat file with
  row:

    office_mayor,Mayor,Alcalde,市長
  -->
  <xs:complexType name="InternationalizedText">
    <xs:sequence>
      <xs:element name="Text" type="LanguageString" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
    <!--
    This is not type "xs:ID" because the same element can potentially
    appear multiple times in the document.
    -->
    <xs:attribute name="identifier" type="xs:string" />
  </xs:complexType>

  <!--
  LanguageString: a type representing a string with a language specified.
  -->
  <xs:complexType name="LanguageString">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="language" type="xs:language" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="Locality">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" />
      <xs:element name="StateId" type="xs:IDREF" />
      <xs:element name="Type" type="DistrictType" />
      <xs:element name="OtherType" type="xs:string" minOccurs="0" />
      <xs:element name="ElectionAdministrationId" type="xs:IDREF" minOccurs="0" />
      <xs:element name="PollingLocationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
=======
>>>>>>> Pass 11 of N in migrating the sample feed to VIP 5.0.
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="Office">
    <xs:sequence>
      <xs:element name="ElectoralDistrictId" type="xs:IDREF" />
      <xs:element name="Name" type="InternationalizedText" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
      <xs:element name="OfficeHolderPersonId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="IsPartisan" type="xs:boolean" minOccurs="0" />
      <xs:element name="FilingDeadline" type="xs:date" minOccurs="0" />
      <xs:element name="Term" type="Term" minOccurs="0" />
      <xs:element name="ContactInformationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="OrderedContestType">
    <xs:sequence>
      <xs:element name="ContestId" type="xs:IDREF" />
      <xs:element name="BallotSelectionId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Party">
    <xs:sequence>
      <xs:element name="Abbreviation" type="xs:string" minOccurs="0" />
      <xs:element name="Name" type="InternationalizedText" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
      <xs:element name="Color" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-f]{6}" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="LogoUri" type="xs:anyURI" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="PartyContest">
    <xs:complexContent>
      <xs:extension base="ContestType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PartySelection">
    <xs:complexContent>
      <xs:extension base="BallotSelectionType">
        <xs:sequence>
          <xs:element name="PartyId" type="xs:IDREF" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Person">
    <xs:sequence>
      <xs:element name="DateOfBirth" type="xs:date" minOccurs="0" />
      <xs:element name="ContactInformationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="PartyId" type="xs:IDREF" minOccurs="0" />
      <xs:element name="FirstName" type="xs:string" minOccurs="0" />
      <xs:element name="LastName" type="xs:string" minOccurs="0" />
      <xs:element name="MiddleName" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Nickname" type="xs:string" minOccurs="0" />
      <xs:element name="Prefix" type="xs:string" minOccurs="0" />
      <xs:element name="Profession" type="InternationalizedText" minOccurs="0" />
      <xs:element name="Suffix" type="xs:string" minOccurs="0" />
      <xs:element name="Title" type="InternationalizedText" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="PollingLocation">
    <xs:sequence>
      <!-- It is intentional that an address is required. -->
      <xs:element name="AddressLine" type="xs:string" maxOccurs="unbounded" />
      <xs:element name="Directions" type="InternationalizedText" minOccurs="0" maxOccurs="1" />
      <!-- Note: The "Hours" element is being deprecated and will be removed
           in future versions of VIP.
        -->
      <xs:element name="Hours" type="InternationalizedText" minOccurs="0" />
      <xs:element name="HoursOpenId" type="xs:IDREF" minOccurs="0" />
      <xs:element name="PhotoUrl" type="xs:anyURI" minOccurs="0" maxOccurs="1" />
      <xs:element name="IsEarlyVoting" type="xs:boolean" minOccurs="0" maxOccurs="1" />
      <xs:element name="IsDropBox" type="xs:boolean" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="Precinct">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
      <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="1" />
      <xs:element name="PrecinctSplitName" type="xs:string" minOccurs="0" maxOccurs="1" />
      <xs:element name="LocalityId" type="xs:IDREF" minOccurs="1" maxOccurs="1" />
      <xs:element name="ElectoralDistrictId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Ward" type="xs:string" minOccurs="0" maxOccurs="1" />
      <xs:element name="PollingLocationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="IsMailOnly" type="xs:boolean" minOccurs="0" maxOccurs="1" />
      <xs:element name="BallotStyleId" type="xs:IDREF" minOccurs="0" maxOccurs="1" />
      <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="RetentionContest">
    <xs:complexContent>
      <xs:extension base="BallotMeasureContestType">
        <xs:sequence>
          <xs:element name="CandidateId" type="xs:IDREF" />
          <xs:element name="OfficeId" type="xs:IDREF" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="StreetSegment">
    <xs:sequence>
      <xs:element name="StartHouseNumber" type="xs:integer" />
      <xs:element name="EndHouseNumber" type="xs:integer" />
      <xs:element name="OddEvenBoth" type="OebEnum" />
      <xs:element name="NonHouseAddress" type="DetailAddressType" />
      <xs:element name="UnitNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="PrecinctId" type="xs:IDREF" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="Term">
    <xs:sequence>
      <xs:element name="Type" type="OfficeTermType" />
      <xs:element name="StartDate" type="xs:date" minOccurs="0" />
      <xs:element name="EndDate" type="xs:date" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <!-- Root element. -->
  <xs:element name="VipObject">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">

        <!-- structural VIP elements-->
        <xs:element name="Source" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:all>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="VipId" type="xs:string" />
              <xs:element name="DateTime" type="xs:dateTime" />
              <xs:element name="Description" type="InternationalizedText" minOccurs="0" />
              <xs:element name="OrganizationUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="FeedContactInformationId" type="xs:IDREF" minOccurs="0" />
              <xs:element name="TermsOfUseUrl" type="xs:anyURI" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="Election" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:all>
              <xs:element name="Date" type="xs:date" />
              <xs:element name="ElectionType" type="InternationalizedText" minOccurs="0" />
              <xs:element name="StateId" type="xs:IDREF" />
              <xs:element name="IsStatewide" type="xs:boolean" minOccurs="0" />
              <xs:element name="RegistrationInfo" type="InternationalizedText" minOccurs="0" />
              <xs:element name="AbsenteeBallotInfo" type="InternationalizedText" minOccurs="0" />
              <xs:element name="ResultsUrl" type="xs:anyURI" minOccurs="0" />
              <!-- Note: The "PollingHours" element is being deprecated
           and will be removed in future versions of VIP.
        -->
              <xs:element name="PollingHours" type="InternationalizedText" minOccurs="0" />
              <xs:element name="HoursOpenId" type="xs:IDREF" minOccurs="0" />
              <xs:element name="HasElectionDayRegistration" type="xs:boolean" minOccurs="0" />
              <xs:element name="RegistrationDeadline" type="xs:date" minOccurs="0" />
              <xs:element name="AbsenteeRequestDeadline" type="xs:date" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <!-- end of structural VIP elements-->

        <!-- geographic elements -->
        <xs:element name="State">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="ElectionAdministrationId" type="xs:IDREF" minOccurs="0" />
              <xs:element name="PollingLocationId" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="ExternalIdentifiers" type="ExternalIdentifiers" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="Locality" type="Locality" />

        <xs:element name="Precinct" type="Precinct" />

        <xs:element name="StreetSegment" type="StreetSegment" />
        <!-- end of geographic elements-->

        <!-- administration elements-->
        <xs:element name="ElectionAdministration" type="ElectionAdministration" />

        <xs:element name="PollingLocation" type="PollingLocation" />

        <xs:element name="ElectoralDistrict" type="ElectoralDistrict" />
        <!--end of administration elements-->

        <!-- This replaces the "referendum" element in VIP -->
        <xs:element name="BallotMeasureContest" type="BallotMeasureContestType" />
        <xs:element name="Contest" type="ContestType" />
        <xs:element name="BallotSelection" type="BallotSelectionType" />

        <!-- Generic string for a ballot measure (referendum) selection -->
        <xs:element name="BallotMeasureSelection" type="BallotMeasureSelection" />

        <xs:element name="BallotStyle" type="BallotStyle" />

        <xs:element name="Candidate" type="Candidate" />

        <xs:element name="CandidateContest" type="CandidateContest" />

        <xs:element name="CandidateSelection" type="CandidateSelection" />

        <xs:element name="ContactInformation" type="ContactInformation" />

        <xs:element name="Office" type="Office" />

        <xs:element name="Party" type="Party" />

        <xs:element name="PartyContest" type="PartyContest" />

        <xs:element name="PartySelection" type="PartySelection" />

        <xs:element name="Person" type="Person" />

        <xs:element name="RetentionContest" type="RetentionContest" />

        <xs:element name="HoursOpen" type="HoursOpen" />

      </xs:choice>

      <xs:attribute name="schemaVersion" type="xs:decimal" use="required" fixed="3.0" />
    </xs:complexType>
  </xs:element>
</xs:schema>
